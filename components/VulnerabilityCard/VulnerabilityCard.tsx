import React from "react";
import Badge from "../Badge";
import { Card, Text } from "@geist-ui/core";
import { Shield } from "@geist-ui/icons";
import { parseDate } from "@/utils/dates";
import { Vulnerability } from "@/app/vulnerabilities/types";
import {
  getSeverityColor,
  getSeverityIcon,
  getSeverityValue,
} from "@/utils/assets";

interface CardProps extends Vulnerability {
  color: string;
}

export const VulnerabilityCard = (vuln: CardProps) => {
  const colorVariants = {
    gray: "hover:!border-gray-700",
    pink: "hover:!border-pink-700",
    amber: "hover:!border-amber-700",
    blue: "hover:!border-blue-700",
    red: "hover:!border-red-700",
    green: "hover:!border-green-700",
  };

  return (
    <Card
      key={vuln.id}
      shadow
      className={`${
        colorVariants[vuln.color as keyof typeof colorVariants]
      } w-full cursor-pointer border gap-2 transition duration-600 ease-in-out`}
    >
      <div className="flex flex-col gap-2">
        <div className="flex items-center gap-2 pb-3">
          <Badge
            color={getSeverityColor(getSeverityValue(vuln.severity))}
            title={vuln.severity}
          >
            {getSeverityIcon(getSeverityValue(vuln.severity))}
          </Badge>
          <Badge label={vuln.cwe} color={vuln.color}>
            <Shield size={16} />
          </Badge>
        </div>
      </div>
      <Text small className="!text-gray-600">
        {parseDate(vuln.createdAt)}
      </Text>
      <Text h4 className="overflow-hidden truncate m-0">
        {vuln.title}
      </Text>
      <Text small className="hyphens-auto">
        {vuln.description}
      </Text>
      {/* <div className="flex justify-between w-full mt-3">
        <Button
          iconRight={<ArrowLeft />}
          auto
          px={0.6}
          className="!rounded-full"
        />
        <Button
          iconRight={<ArrowRight />}
          auto
          px={0.6}
          className="!rounded-full"
        />
      </div> */}
    </Card>
  );
};
