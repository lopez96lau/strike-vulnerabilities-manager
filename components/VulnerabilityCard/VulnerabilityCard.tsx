import React from "react";
import Badge from "../Badge";
import { Card, Text } from "@geist-ui/core";
import { Shield } from "@geist-ui/icons";
import { parseDate } from "@/utils/dates";
import { Vulnerability } from "@/app/vulnerabilities/types";
import {
  getSeverityColor,
  getSeverityIcon,
  getSeverityValue,
} from "@/utils/assets";

interface CardProps extends Vulnerability {
  color: string;
  onClick?: () => void;
}

export const VulnerabilityCard = ({
  id,
  color,
  severity,
  cwe,
  createdAt,
  title,
  description,
  onClick,
}: CardProps) => {
  const colorVariants = {
    gray: "hover:!border-gray-700",
    pink: "hover:!border-pink-700",
    amber: "hover:!border-amber-700",
    blue: "hover:!border-blue-700",
    red: "hover:!border-red-700",
    green: "hover:!border-green-700",
  };

  return (
    <Card
      key={id}
      shadow
      onClick={onClick}
      className={`${
        colorVariants[color as keyof typeof colorVariants]
      } w-full cursor-pointer border gap-2 transition duration-600 ease-in-out`}
    >
      <div className="flex flex-col gap-2">
        <div className="flex items-center gap-2 pb-3">
          <Badge
            color={getSeverityColor(getSeverityValue(severity))}
            title={severity}
          >
            {getSeverityIcon(getSeverityValue(severity))}
          </Badge>
          <Badge label={cwe} color={color}>
            <Shield size={16} />
          </Badge>
        </div>
      </div>
      <Text small className="!text-gray-600">
        {parseDate(createdAt)}
      </Text>
      <Text h4 className="overflow-hidden truncate m-0">
        {title}
      </Text>
      <Text small className="hyphens-auto">
        {description}
      </Text>
    </Card>
  );
};
