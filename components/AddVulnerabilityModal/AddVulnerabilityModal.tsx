import React from "react";
import {
  VULNERABILITY_SEVERITIES,
  VULNERABILITY_STATUSES,
} from "@/app/vulnerabilities/constants";
import { Input, Modal, Select, Spacer, Textarea } from "@geist-ui/core";
import { getSeverityIcon, getSeverityValue } from "@/utils/assets";

interface ModalProps {
  isOpen: boolean;
  isUpdating: boolean;
  formData: any;
  setFormData: React.Dispatch<React.SetStateAction<any>>;
  handleSubmit: () => void;
  handleClose: () => void;
  handleChange: (
    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>
  ) => void;
}

export const AddVulnerabilityModal = ({
  isOpen,
  isUpdating,
  handleClose,
  formData,
  handleChange,
  setFormData,
  handleSubmit,
}: ModalProps) => {
  return (
    <Modal visible={isOpen} onClose={handleClose}>
      <Modal.Title>Nueva Vulnerabilidad</Modal.Title>
      <Modal.Content>
        <form id="vulnerability-form">
          <Input
            width="100%"
            placeholder="Title"
            name="title"
            value={formData.title}
            onChange={(e) => handleChange(e)}
            required
          />
          <Spacer h={0.5} />
          <Textarea
            width="100%"
            title="Description"
            placeholder="Description"
            name="description"
            value={formData.description}
            onChange={(e) => handleChange(e)}
            required
          />
          <Spacer h={0.5} />
          <Select
            width="100%"
            placeholder="Severity"
            value={formData.severity}
            onChange={(val) =>
              setFormData({ ...formData, severity: val as string })
            }
          >
            {VULNERABILITY_SEVERITIES.map((severity) => (
              <Select.Option value={severity.name} key={severity.id}>
                <div className="flex gap-2 items-center">
                  {getSeverityIcon(getSeverityValue(severity.name))}
                  {severity.name}
                </div>
              </Select.Option>
            ))}
          </Select>
          <Spacer h={0.5} />
          <Input
            width="100%"
            placeholder="CWE"
            name="cwe"
            value={formData.cwe}
            onChange={(e) => handleChange(e)}
            required
          />
          <Spacer h={0.5} />
          <Select
            width="100%"
            placeholder="Status"
            value={formData.status}
            onChange={(val) =>
              setFormData({ ...formData, status: val as string })
            }
          >
            {VULNERABILITY_STATUSES.map((status) => {
              const statusColorVariants = {
                gray: "bg-gray-900",
                pink: "bg-pink-900",
                amber: "bg-amber-900",
                blue: "bg-blue-900",
                red: "bg-red-900",
                green: "bg-green-900",
              };
              return (
                <Select.Option value={status.name} key={status.id}>
                  <div className="flex gap-1 items-center">
                    <span
                      className={`${
                        statusColorVariants[status.color]
                      } flex w-2.5 h-2.5  rounded-full me-1.5 shrink-0 ml-0.5`}
                    ></span>
                    {status.name}
                  </div>
                </Select.Option>
              );
            })}
          </Select>
        </form>
      </Modal.Content>
      <Modal.Action passive={true} onClick={handleClose}>
        Cancel
      </Modal.Action>
      <Modal.Action onClick={handleSubmit} loading={isUpdating}>
        Save
      </Modal.Action>
    </Modal>
  );
};
